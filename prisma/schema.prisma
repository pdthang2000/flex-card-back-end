generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  flashcards   Flashcard[]
  tags         Tag[]
  flashcardTag FlashcardTag[]
}

model Flashcard {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  front     String
  back      String
  createdBy String         @map("createdBy") @db.ObjectId
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  deletedAt DateTime?
  // Relations
  user      User           @relation(fields: [createdBy], references: [id])
  tags      FlashcardTag[]
}

model Tag {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  createdBy  String         @map("createdBy") @db.ObjectId
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  deletedAt  DateTime?
  // Relations
  user       User           @relation(fields: [createdBy], references: [id])
  flashcards FlashcardTag[]

  @@unique([createdBy, name]) // Tag name unique per user
  @@index([name])
}

model FlashcardTag {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  flashcardId String   @map("flashcardId") @db.ObjectId
  tagId       String   @map("tagId") @db.ObjectId
  createdBy   String   @map("createdBy") @db.ObjectId
  createdAt   DateTime @default(now())

  // Relations
  flashcard Flashcard @relation(fields: [flashcardId], references: [id])
  tag       Tag       @relation(fields: [tagId], references: [id])
  user      User      @relation(fields: [createdBy], references: [id])

  @@unique([flashcardId, tagId])
  @@index([createdBy, tagId, flashcardId, createdAt])
}
